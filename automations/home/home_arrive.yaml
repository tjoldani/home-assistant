---
alias: "Home Arrive"
description: Handle home actions when Nichole or TJ arrive home.
id: "home_arrive"
mode: queued
max_exceeded: silent

trigger:
  - platform: state
    id: tj
    entity_id: person.tj
    from: "not_home"
    to: "home"
    for: "00:00:05"

  - platform: state
    id: nichole
    entity_id: person.nichole
    from: "not_home"
    to: "home"
    for: "00:00:05"

variables:
  sound: >-
    {% if trigger.id == 'tj' %}
      media-source://media_source/local/YouSuffer.mp3
    {% elif trigger.id == 'nichole' %}
      media-source://media_source/local/nichole.mp3
    {% else %}{% endif %}

action:
  # Turn on kitchen lights only if they're off
  - if:
      - condition: state
        entity_id: light.kitchen_lights_zgroup
        state: "off"
    then:
      - service: light.turn_on
        target:
          entity_id: light.kitchen_lights_zgroup

  # TJ arrives → pulse garage if closed and during allowed hours
  - choose:
      - conditions:
          - condition: trigger
            id: tj
          - condition: state
            entity_id: binary_sensor.garage_door_sensor_sensor_state_any
            state: "off" # closed
          - condition: time
            after: "06:00:00"
            before: "23:59:59"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: switch.garage_door

      # Nichole arrives → unlock if locked
      - conditions:
          - condition: trigger
            id: nichole
          - condition: state
            entity_id: lock.front_door
            state: "locked"
        sequence:
          - service: lock.unlock
            target:
              entity_id: lock.front_door

  # Arrival chime: use the GROUP (as you prefer), within hours, and only if not already playing
  - if:
      - condition: time
        after: "08:00:00"
        before: "21:00:00"
      - condition: template
        value_template: "{{ sound | length > 0 }}"
      - condition: template
        value_template: >
          {{ states('media_player.all_homepod_minis') not in ['playing', 'buffering'] }}
    then:
      - service: media_player.play_media
        target:
          entity_id: media_player.all_homepod_minis
        data:
          media_content_id: "{{ sound }}"
          media_content_type: music
